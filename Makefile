SHELL=/bin/bash
ENV_NAME := ml4sts
ENV_RUN := conda run -n ${ENV_NAME}
PIP_RUN := ${cr} pip

.PHONY: help, \
		setup, \
		create_env, \
		update_env, \
		save_env, \
		install_hooks, \
		install_requirements \
		lint_staged \
		lint_all \
		clean

help:
	@echo
	@echo "ML4STS Makefile"
	@echo
	@echo "Usage:"
	@echo
	@echo "ENVIRONMENT MANAGEMENT"
	@echo
	@echo "\t setup			 creates and sets up the conda environment: "\
							 "installs packages from environment.yml and "\
							 "installs git commit hooks."
	@echo
	@echo "\t update_env     Reinstalls packages from environment.yml "\
							 "and reinstall git hooks"
	@echo
	@echo "\t save_env		 Freezes current conda dependencies and saves "\
							 "them in environment.yml"
	@echo
	@echo "\t clean			 Cleans autogenerated files like cache"
	@echo

## MANAGING THE ENVIRONMENT
setup:
	@echo Setting up the repo
	$(MAKE) create_env
	${ENV_RUN} $(MAKE) install_ml4sts
	${ENV_RUN} $(MAKE) install_hooks

create_env:
	@echo Creating environment from environment.yml
	@conda env create -f environment.yml

update_env:
	@echo Updating environment from environment.yml
	@conda env update -f environment.yml
	$(MAKE) install_hooks

save_env:
	@echo Saving libraries on environment.yml...
	@conda env export --from-history | cut -f -2 -d "=" | grep -v "prefix" > environment.yml

install_hooks:
	@echo Installing precommit hooks...
	@pre-commit install
	@pre-commit install --hook-type commit-msg

install_ml4sts:
	@echo Installing ml4sts via pip
	@pip install -e .

clean:
	@echo Cleaning files...
	@rm -rf *.mypy_cache *.egg-info ml4sts/__pycache__
